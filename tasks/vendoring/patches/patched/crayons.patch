diff --git a/pipenv/patched/crayons.py b/pipenv/patched/crayons.py
index 455d3e9..82bed5c 100644
--- a/pipenv/patched/crayons.py
+++ b/pipenv/patched/crayons.py
@@ -12,14 +12,14 @@ import os
 import re
 import sys
 
-PY3 = sys.version_info[0] >= 3
-
 import colorama
 
+PY3 = sys.version_info[0] >= 3
+
 __all__ = (
     'red', 'green', 'yellow', 'blue',
-    'black', 'magenta', 'cyan', 'white',
-    'clean', 'disable'
+    'black', 'magenta', 'cyan', 'white', 'normal',
+    'clean', 'disable',
 )
 
 COLORS = __all__[:-2]
@@ -37,16 +37,17 @@ else:
 
 class ColoredString(object):
     """Enhanced string for __len__ operations on Colored output."""
-    def __init__(self, color, s, always_color=False, bold=False):
+    def __init__(self, color, s, always_color=False, bold=False, bgcolor=None):
         super(ColoredString, self).__init__()
         if not PY3 and isinstance(s, unicode):
             self.s = s.encode('utf-8')
         else:
             self.s = s
         self.color = color
+        self.bgcolor = bgcolor
         self.always_color = always_color
         self.bold = bold
-        if os.environ.get('CLINT_FORCE_COLOR'):
+        if os.environ.get('PIPENV_FORCE_COLOR'):
             self.always_color = True
 
     def __getattr__(self, att):
@@ -66,8 +67,13 @@ class ColoredString(object):
 
     @property
     def color_str(self):
-        style = 'BRIGHT' if self.bold else 'NORMAL'
-        c = '%s%s%s%s%s' % (getattr(colorama.Fore, self.color), getattr(colorama.Style, style), self.s, colorama.Fore.RESET, getattr(colorama.Style, 'NORMAL'))
+        style = getattr(colorama.Style, 'BRIGHT' if self.bold else 'NORMAL')
+        bg = getattr(colorama.Back, self.bgcolor, None)
+        color = getattr(colorama.Fore, self.color)
+        if bg:
+            c = '%s%s%s%s%s' % (color, bg, style, self.s, colorama.Style.RESET_ALL)
+        else:
+            c = '%s%s%s%s' % (color, style, self.s, colorama.Style.RESET_ALL)
 
         if self.always_color:
             return c
@@ -76,7 +82,6 @@ class ColoredString(object):
         else:
             return self.s
 
-
     def __len__(self):
         return len(self.s)
 
@@ -121,29 +126,44 @@ def clean(s):
     return txt
 
 
-def black(string, always=False, bold=False):
-    return ColoredString('BLACK', string, always_color=always, bold=bold)
+def normal(string, always=False, bold=False, on=None):
+    return ColoredString('RESET', string, always_color=always, bold=bold, bgcolor=on)
+
+
+def black(string, always=False, bold=False, on=None):
+    return ColoredString('BLACK', string, always_color=always, bold=bold, bgcolor=on)
+
+
+def red(string, always=False, bold=False, on=None):
+    return ColoredString('RED', string, always_color=always, bold=bold, bgcolor=on)
+
+
+def green(string, always=False, bold=False, on=None):
+    return ColoredString('GREEN', string, always_color=always, bold=bold, bgcolor=on)
+
+
+def yellow(string, always=False, bold=False, on=None):
+    return ColoredString('YELLOW', string, always_color=always, bold=bold, bgcolor=on)
+
+
+def blue(string, always=False, bold=False, on=None):
+    if os.name == 'nt':
+        return ColoredString('WHITE', string, always_color=always, bold=True, bgcolor='BLUE')
+    return ColoredString('BLUE', string, always_color=always, bold=bold, bgcolor=on)
 
-def red(string, always=False, bold=False):
-    return ColoredString('RED', string, always_color=always, bold=bold)
 
-def green(string, always=False, bold=False):
-    return ColoredString('GREEN', string, always_color=always, bold=bold)
+def magenta(string, always=False, bold=False, on=None):
+    return ColoredString('MAGENTA', string, always_color=always, bold=bold, bgcolor=on)
 
-def yellow(string, always=False, bold=False):
-    return ColoredString('YELLOW', string, always_color=always, bold=bold)
 
-def blue(string, always=False, bold=False):
-    return ColoredString('BLUE', string, always_color=always, bold=bold)
+def cyan(string, always=False, bold=False, on=None):
+    return ColoredString('CYAN', string, always_color=always, bold=bold, bgcolor=on)
 
-def magenta(string, always=False, bold=False):
-    return ColoredString('MAGENTA', string, always_color=always, bold=bold)
 
-def cyan(string, always=False, bold=False):
-    return ColoredString('CYAN', string, always_color=always, bold=bold)
+def white(string, always=False, bold=False, on=None):
+    # This upsets people...
+    return ColoredString('WHITE', string, always_color=always, bold=bold, bgcolor=on)
 
-def white(string, always=False, bold=False):
-    return ColoredString('WHITE', string, always_color=always, bold=bold)
 
 def disable():
     """Disables colors."""
